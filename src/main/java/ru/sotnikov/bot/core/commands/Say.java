package ru.sotnikov.bot.core.commands;

import ru.sotnikov.bot.entity.Entity;

public class Say extends DefaultCommand {

    String msg = "";

    public Say(Entity entity) {
        super(entity);
    }

    public void testSay() {
        if (isNotSecondUser())
            msg = msg.concat(getEntity().getFirstUser().getFirstName().concat(", –ü—Ä–∏–≤–µ—Ç"));
        else
            msg = msg.concat(getEntity().getFirstUser().getFirstName()).concat(", –ø–µ—Ä–µ—Å–ª–∞–ª(–∞) —Å–æ–æ–±—â–µ–Ω–∏–µ ")
                    .concat(getEntity().getSecondUser().getFirstName());
        sendMessage(msg);
    }

    public void sayAll() {
        msg = msg.concat(getEntity().getFirstUser().getFirstNameID()).concat("–ø–æ–∑–≤–∞–ª(–∞) –≤—Å–µ—Ö - @all");
        sendMessage(msg);
    }

    public void sayOnline() {
        msg = msg.concat(getEntity().getFirstUser().getFirstNameID()).concat("–ø–æ–∑–≤–∞–ª(–∞) –≤—Å–µ—Ö, –∫—Ç–æ –Ω–∞—Ö–æ–¥–∏–ª—Å—è –æ–Ω–ª–∞–π–Ω - @online");
        sendMessage(msg);
    }

    public boolean isContainsID(){
       return getEntity().getTextMessageSplit(1).contains("[")&&getEntity().getTextMessageSplit(1)
               .contains("]")&&getEntity().getTextMessageSplit(1)
               .contains("|")&&getEntity().getTextMessageSplit(1)
               .contains("id");
    }

    public void sayHit(){
        msg = msg.concat(getEntity().getFirstUser().getFirstNameID().concat("—É–¥–∞—Ä–∏–ª(–∞) "));
        if(isNotSecondUser()){
            if(getEntity().getTextMessageSplit().length>1){
                if(isContainsID()){
                    msg = msg.concat(getEntity().getTextMessageSplit(1));
                }else{
                   msg = msg.concat("–Ω–µ–∏–∑–≤–µ—Å—Ç—É—é —Ü–µ–ª—å");
                }
            }else{
                msg = msg.concat("–ø—É—Å—Ç–æ—Ç—É");
            }
        }else {
            msg = msg.concat(getEntity().getSecondUser().getFirstNameID());
        }
        sendMessage(msg+"üëä");
    }
    public void sayKiss(){
        msg = msg.concat(getEntity().getFirstUser().getFirstNameID().concat("–ø–æ—Ü–µ–ª–æ–≤–∞–ª(–∞) "));
        if(isNotSecondUser()){
            if(getEntity().getTextMessageSplit().length>1){
                if(isContainsID()){
                    msg = msg.concat(getEntity().getTextMessageSplit(1));
                }else{
                    msg = msg.concat("–Ω–µ–∏–∑–≤–µ—Å—Ç—É—é —Ü–µ–ª—å");
                }
            }else{
                msg = msg.concat("–≤–æ–∑–¥—É—Ö");
            }
        }else {
            msg = msg.concat(getEntity().getSecondUser().getFirstNameID());
        }
        sendMessage(msg+"üòò");
    }
    public void sayMurder(){
        msg = msg.concat(getEntity().getFirstUser().getFirstNameID().concat("—É–±–∏–ª(–∞) "));
        if(isNotSecondUser()){
            if(getEntity().getTextMessageSplit().length>1){
                if(isContainsID()){
                    msg = msg.concat(getEntity().getTextMessageSplit(1));
                }else{
                    msg = msg.concat("–Ω–µ–∏–∑–≤–µ—Å—Ç—É—é —Ü–µ–ª—å");
                }
            }else{
                msg = msg.concat("–º—É—Ö—É");
            }
        }else {
            msg = msg.concat(getEntity().getSecondUser().getFirstNameID());
        }
        sendMessage(msg+"ü§°üî™");
    }
    public void sayRape(){
        msg = msg.concat(getEntity().getFirstUser().getFirstNameID().concat("–Ω–∞–¥—Ä—É–≥–∞–ª—Å—è(–∞—Å—å) –Ω–∞–¥ "));
        if(isNotSecondUser()){
            if(getEntity().getTextMessageSplit().length>1){
                if(isContainsID()){
                    msg = msg.concat(getEntity().getTextMessageSplit(1));
                }else{
                    msg = msg.concat("–Ω–µ–∏–∑–≤–µ—Å—Ç—É—é —Ü–µ–ª—å");
                }
            }else{
                msg = msg.concat("—Ä—É–∫—É");
            }
        }else {
            msg = msg.concat(getEntity().getSecondUser().getFirstNameID());
        }
        sendMessage(msg+"üëâüëåüòÅ");
    }
    public void saySex(){
        msg = msg.concat(getEntity().getFirstUser().getFirstNameID().concat("–ø—Ä–∏–Ω—É–¥–∏–ª(–∞) –∫ –∂–µ—Å—Ç–∫–æ–º—É –∏–Ω—Ç–∏–º—É "));
        if(isNotSecondUser()){
            if(getEntity().getTextMessageSplit().length>1){
                if(isContainsID()){
                    msg = msg.concat(getEntity().getTextMessageSplit(1));
                }else{
                    msg = msg.concat("–Ω–µ–∏–∑–≤–µ—Å—Ç—É—é —Ü–µ–ª—å");
                }
            }else{
                msg = msg.concat("–±—É—Ç—ã–ª–∫—É");
            }
        }else {
            msg = msg.concat(getEntity().getSecondUser().getFirstNameID());
        }
        sendMessage(msg+"üëâüëå");
    }
    public void sayBurt(){
        msg = msg.concat(getEntity().getFirstUser().getFirstNameID().concat("—Å–∂—ë–≥(—Å–æ–∂–≥–ª–∞) "));
        if(isNotSecondUser()){
            if(getEntity().getTextMessageSplit().length>1){
                if(isContainsID()){
                    msg = msg.concat(getEntity().getTextMessageSplit(1));
                }else{
                    msg = msg.concat("–Ω–µ–∏–∑–≤–µ—Å—Ç—É—é —Ü–µ–ª—å");
                }
            }else{
                msg = msg.concat("–¥—Ä–æ–≤–∞ –≤ –ø–µ—á–∫–µ");
            }
        }else {
            msg = msg.concat(getEntity().getSecondUser().getFirstNameID());
        }
        sendMessage(msg+"üî•üåö");
    }
    public void sayShake(){
        msg = msg.concat(getEntity().getFirstUser().getFirstNameID().concat("–ø–æ–∂–∞–ª(–∞) —Ä—É–∫—É "));
        if(isNotSecondUser()){
            if(getEntity().getTextMessageSplit().length>1){
                if(isContainsID()){
                    msg = msg.concat(getEntity().getTextMessageSplit(1));
                }else{
                    msg = msg.concat("–Ω–µ–ø–æ–Ω—è—Ç–Ω–æ –∫–æ–º—É)");
                }
            }else{
                msg = msg.concat("–Ω–µ–∑–Ω–∞–∫–æ–º—Ü—É");
            }
        }else {
            msg = msg.concat(getEntity().getSecondUser().getFirstNameID());
        }
        sendMessage(msg+"ü§ù");
    }
    public void Command() {
        sendMessage("https://sites.google.com/view/dayandnight0");
    }


}
